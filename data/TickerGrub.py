from pybit.unified_trading import HTTP
from pprint import pprint
from datetime import datetime

intro = """
<<<---TickerGrub--->>>
–ü—Ä–∏–≤–µ—Ç!
–Ø —Å–æ–±–µ—Ä—É –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ —Å Bybit
–ó–∞—Ç–µ–º —É–ø–∞–∫—É—é –≤ CSV —Ñ–∞–π–ª
–§–æ—Ä–º–∞—Ç —Ç–∏–∫–µ—Ä–æ–≤:
BTCUSDT, LTCUSDT, ETHUSDT
–ò–Ω—Ç–µ—Ä–≤–∞–ª—ã:
1, 3, 5, 15, 30, 60, 120, 240, 360, 720, D, W, M
>>>---TickerGrub---<<<
"""

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ticker_name = ""
interval = "D"

# –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç HTTP –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Bybit
session = HTTP(testnet=False)


def start_grub():
    global ticker_name, interval

    all_candles = []
    # –Ω–∞—á–Ω–µ–º "—Å–¥–∞–ª–µ–∫–∞", –Ω–∞–ø—Ä–∏–º–µ—Ä 2017-01-01
    start_time = int(datetime(2022, 1, 1).timestamp())

    while True:
        get_candles = session.get_kline(
            category="spot",
            symbol=ticker_name,
            interval=interval,
            start=start_time * 1000,  # API –∂–¥—ë—Ç –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
            limit=1000
        )

        candles = get_candles["result"]["list"]
        if not candles:
            break  # –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ –Ω–µ—Ç ‚Üí –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è

        candles.reverse()  # —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫
        all_candles.extend(candles)

        # –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–≤–µ—á—É –∏ —Å—Ç–∞–≤–∏–º –≤—Ä–µ–º—è +1 —Å–µ–∫—É–Ω–¥–∞
        last_time = int(candles[-1][0]) // 1000
        start_time = last_time + 1

        # –ï—Å–ª–∏ –º–µ–Ω—å—à–µ 1000 –ø—Ä–∏—à–ª–æ ‚Üí –∑–Ω–∞—á–∏—Ç –¥–æ—à–ª–∏ –¥–æ "–∫–æ–Ω—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏"
        if len(candles) < 1000:
            break

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
    csv_file_name = f"{ticker_name}_{interval}.csv"
    first_row = "datetime,open,high,low,close,volume"

    with open(csv_file_name, mode="w", encoding="utf-8") as file:
        file.write(first_row + "\n")

        for candle in all_candles:
            unix_time = int(candle[0]) // 1000
            date_time = datetime.fromtimestamp(unix_time)
            candle[0] = date_time.strftime("%Y-%m-%d %H:%M:%S")

            candle_maped = map(str, candle[:6])
            candle_join = ",".join(candle_maped)
            file.write(candle_join + "\n")

    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {csv_file_name}")
    print(f"üìä –í—Å–µ–≥–æ —Å–æ–±—Ä–∞–Ω–æ —Å–≤–µ—á–µ–π: {len(all_candles)}")


def menu():
    global intro, ticker_name, interval
    print(intro)

    print("–í–≤–µ–¥–∏—Ç–µ 1 –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫: ")
    print("–í–≤–µ–¥–∏—Ç–µ 2 –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏: ")
    answer = input(">>> ")

    if answer == "1":
        ticker_name = input("–í–≤–µ–¥–∏ –∏–º—è —Ç–∏–∫–µ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä BTCUSDT): ").upper()
        interval = input("–í–≤–µ–¥–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª (1, 5, 15, 60, D, W, M): ").upper()
        start_grub()
        menu()
    elif answer == "2":
        print("–ü–æ–∫–∞!")
        exit()
    else:
        print("–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")
        menu()


# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    menu()
